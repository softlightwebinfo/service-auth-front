{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/rafaelgonzalezmunoz/IdeaProjects/microservices/service-auth-front/pages/dashboard/setting.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from \"react\";\nimport { Dashboard } from \"../../src/components/Dashboard\";\nimport { Input } from \"../../src/components/Input\";\nimport { Button } from \"../../src/components/Button\";\nexport default function Setting() {\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    username: \"\",\n    name: \"\"\n  });\n\n  const onChange = evt => {\n    setState(prev => _objectSpread(_objectSpread({}, prev), {}, {\n      [evt.target.name]: evt.target.value\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Dashboard, {\n    title: \"Setting\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        onChange: onChange,\n        value: state.username,\n        placeholder: \"Email\",\n        name: \"username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        onChange: onChange,\n        value: state.name,\n        placeholder: \"Name\",\n        name: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["/Users/rafaelgonzalezmunoz/IdeaProjects/microservices/service-auth-front/pages/dashboard/setting.tsx"],"names":["React","useState","Dashboard","Input","Button","Setting","state","setState","username","name","onChange","evt","prev","target","value"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,QAA0B,gCAA1B;AACA,SAASC,KAAT,QAAsB,4BAAtB;AACA,SAASC,MAAT,QAAuB,6BAAvB;AAEA,eAAe,SAASC,OAAT,GAAmB;AAC9B,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBN,QAAQ,CAAC;AAC/BO,IAAAA,QAAQ,EAAE,EADqB;AAE/BC,IAAAA,IAAI,EAAE;AAFyB,GAAD,CAAlC;;AAIA,QAAMC,QAAQ,GAAIC,GAAD,IAAS;AACtBJ,IAAAA,QAAQ,CAACK,IAAI,oCACNA,IADM;AAET,OAACD,GAAG,CAACE,MAAJ,CAAWJ,IAAZ,GAAmBE,GAAG,CAACE,MAAJ,CAAWC;AAFrB,MAAL,CAAR;AAIH,GALD;;AAMA,sBACI,QAAC,SAAD;AAAW,IAAA,KAAK,EAAE,SAAlB;AAAA,2BACI;AAAA,8BACI,QAAC,KAAD;AAAO,QAAA,QAAQ,EAAEJ,QAAjB;AAA2B,QAAA,KAAK,EAAEJ,KAAK,CAACE,QAAxC;AAAkD,QAAA,WAAW,EAAE,OAA/D;AAAwE,QAAA,IAAI,EAAE;AAA9E;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,KAAD;AAAO,QAAA,QAAQ,EAAEE,QAAjB;AAA2B,QAAA,KAAK,EAAEJ,KAAK,CAACG,IAAxC;AAA8C,QAAA,WAAW,EAAE,MAA3D;AAAmE,QAAA,IAAI,EAAE;AAAzE;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAE,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AASH","sourcesContent":["import React, { useState } from \"react\";\nimport { Dashboard } from \"../../src/components/Dashboard\";\nimport { Input } from \"../../src/components/Input\";\nimport { Button } from \"../../src/components/Button\";\n\nexport default function Setting() {\n    const [state, setState] = useState({\n        username: \"\",\n        name: \"\",\n    });\n    const onChange = (evt) => {\n        setState(prev => ({\n            ...prev,\n            [evt.target.name]: evt.target.value,\n        }));\n    }\n    return (\n        <Dashboard title={\"Setting\"}>\n            <form>\n                <Input onChange={onChange} value={state.username} placeholder={\"Email\"} name={\"username\"}/>\n                <Input onChange={onChange} value={state.name} placeholder={\"Name\"} name={\"name\"}/>\n                <Button type={\"submit\"}>Save</Button>\n            </form>\n        </Dashboard>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"class ApiRoute {\n  constructor(routes) {\n    this.routes = routes;\n  }\n\n  get(route) {\n    return !(route in this.routes) ? \"\" : this.routes[route];\n  }\n\n}\n\nconst apiRoute = new ApiRoute({\n  login: \"api/auth/login\",\n  webs: \"api/webs\"\n});\nexport { apiRoute };","map":{"version":3,"sources":["/Users/rafaelgonzalezmunoz/IdeaProjects/microservices/service-auth-front/src/config/apiRoute.ts"],"names":["ApiRoute","constructor","routes","get","route","apiRoute","login","webs"],"mappings":"AAAA,MAAMA,QAAN,CAAe;AACXC,EAAAA,WAAW,CAASC,MAAT,EAA0C;AAAA,SAAjCA,MAAiC,GAAjCA,MAAiC;AACpD;;AAEMC,EAAAA,GAAP,CAAWC,KAAX,EAAkC;AAC9B,WAAO,EAAEA,KAAK,IAAI,KAAKF,MAAhB,IAA0B,EAA1B,GAA+B,KAAKA,MAAL,CAAYE,KAAZ,CAAtC;AACH;;AANU;;AAUf,MAAMC,QAAQ,GAAG,IAAIL,QAAJ,CAAa;AAC1BM,EAAAA,KAAK,EAAE,gBADmB;AAE1BC,EAAAA,IAAI,EAAE;AAFoB,CAAb,CAAjB;AAKA,SAASF,QAAT","sourcesContent":["class ApiRoute {\n    constructor(private routes: { [p: string]: string }) {\n    }\n\n    public get(route: string): string {\n        return !(route in this.routes) ? \"\" : this.routes[route];\n    }\n}\n\n\nconst apiRoute = new ApiRoute({\n    login: \"api/auth/login\",\n    webs: \"api/webs\"\n});\n\nexport { apiRoute }\n"]},"metadata":{},"sourceType":"module"}
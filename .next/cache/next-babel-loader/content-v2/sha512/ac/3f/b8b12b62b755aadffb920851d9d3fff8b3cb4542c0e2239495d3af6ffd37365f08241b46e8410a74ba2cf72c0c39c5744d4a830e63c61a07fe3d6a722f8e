{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/rafaelgonzalezmunoz/IdeaProjects/microservices/service-auth-front/pages/dashboard.tsx\";\nimport React from \"react\";\nimport { Dashboard } from \"../src/components/Dashboard\";\nimport { CardWebs } from \"../src/components/CardWebs\";\nexport default function DashboardHome({\n  webs\n}) {\n  return /*#__PURE__*/_jsxDEV(Dashboard, {\n    children: /*#__PURE__*/_jsxDEV(CardWebs, {\n      webs: webs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n}\nexport async function getStaticProps() {\n  console.log(process); // const webs = await fetch(apiRoute.webs).then(rs => rs.json());\n\n  return {\n    props: {\n      webs: []\n    }\n  };\n}","map":{"version":3,"sources":["/Users/rafaelgonzalezmunoz/IdeaProjects/microservices/service-auth-front/pages/dashboard.tsx"],"names":["React","Dashboard","CardWebs","DashboardHome","webs","getStaticProps","console","log","process","props"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,6BAA1B;AAEA,SAASC,QAAT,QAAyB,4BAAzB;AAEA,eAAe,SAASC,aAAT,CAAuB;AAACC,EAAAA;AAAD,CAAvB,EAAgD;AAC3D,sBACI,QAAC,SAAD;AAAA,2BACI,QAAC,QAAD;AAAU,MAAA,IAAI,EAAEA;AAAhB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;AAED,OAAO,eAAeC,cAAf,GAAgC;AACnCC,EAAAA,OAAO,CAACC,GAAR,CAAYC,OAAZ,EADmC,CAEnC;;AACA,SAAO;AACHC,IAAAA,KAAK,EAAE;AACHL,MAAAA,IAAI,EAAE;AADH;AADJ,GAAP;AAKH","sourcesContent":["import React from \"react\";\nimport { Dashboard } from \"../src/components/Dashboard\";\nimport { TDashboardProps } from \"../src/props/TDashboardProps\";\nimport { CardWebs } from \"../src/components/CardWebs\";\n\nexport default function DashboardHome({webs}: TDashboardProps) {\n    return (\n        <Dashboard>\n            <CardWebs webs={webs}/>\n        </Dashboard>\n    )\n}\n\nexport async function getStaticProps() {\n    console.log(process);\n    // const webs = await fetch(apiRoute.webs).then(rs => rs.json());\n    return {\n        props: {\n            webs: [],\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}
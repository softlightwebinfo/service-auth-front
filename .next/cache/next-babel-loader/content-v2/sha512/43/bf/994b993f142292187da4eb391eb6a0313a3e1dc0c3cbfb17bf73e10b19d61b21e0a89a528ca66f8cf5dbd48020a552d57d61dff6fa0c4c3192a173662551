{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _defineProperty from \"/Users/rafaelgonzalezmunoz/IdeaProjects/microservices/service-auth-front/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"/Users/rafaelgonzalezmunoz/IdeaProjects/microservices/service-auth-front/src/containers/LoginContainer.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { FormCard } from \"../components/FormCard\";\nimport React, { useState } from \"react\";\nimport { Input } from \"../components/Input\";\nimport { Button } from \"../components/Button\";\nimport { Logo } from \"../components/Logo\";\nimport { Buttons } from \"../components/Buttons\";\nimport { apiRoute } from \"../config/apiRoute\";\nimport { Loader } from \"../components/Loader\";\nexport var LoginContainer = function LoginContainer() {\n  _s();\n\n  var _useState = useState({\n    username: \"\",\n    password: \"\"\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  var _useState2 = useState(false),\n      loader = _useState2[0],\n      setLoader = _useState2[1];\n\n  var onSubmit = function onSubmit(evt) {\n    evt.preventDefault();\n    setLoader(true);\n    fetch(apiRoute.login, {\n      body: JSON.stringify(state),\n      method: \"POST\",\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    }).then(function (rs) {\n      return rs.json();\n    }).then(function (rs) {\n      if (!rs.data && rs.message) {\n        alert(rs.message);\n        return;\n      }\n\n      console.log(rs);\n      setLoader(false);\n    });\n  };\n\n  var onChange = function onChange(evt) {\n    setState(_objectSpread(_objectSpread({}, state), {}, _defineProperty({}, evt.target.name, evt.target.value)));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(FormCard, {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        onChange: onChange,\n        name: \"username\",\n        placeholder: \"Email\",\n        value: state.username,\n        type: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Input, {\n        onChange: onChange,\n        name: \"password\",\n        placeholder: \"Password\",\n        value: state.password,\n        type: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        children: loader ? /*#__PURE__*/_jsxDEV(Loader, {\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 31\n        }, _this) : \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(Buttons, {\n      login: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(LoginContainer, \"qEObayRdoAk33UMEo3laK82WtAY=\");\n\n_c = LoginContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginContainer\");","map":{"version":3,"sources":["/Users/rafaelgonzalezmunoz/IdeaProjects/microservices/service-auth-front/src/containers/LoginContainer.tsx"],"names":["FormCard","React","useState","Input","Button","Logo","Buttons","apiRoute","Loader","LoginContainer","username","password","state","setState","loader","setLoader","onSubmit","evt","preventDefault","fetch","login","body","JSON","stringify","method","headers","then","rs","json","data","message","alert","console","log","onChange","target","name","value"],"mappings":"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","sourcesContent":["import { FormCard } from \"../components/FormCard\";\nimport React, { useState } from \"react\";\nimport { Input } from \"../components/Input\";\nimport { Button } from \"../components/Button\";\nimport { Logo } from \"../components/Logo\";\nimport { Buttons } from \"../components/Buttons\";\nimport { apiRoute } from \"../config/apiRoute\";\nimport { Loader } from \"../components/Loader\";\n\nexport const LoginContainer = () => {\n    const [state, setState] = useState({\n        username: \"\",\n        password: \"\"\n    });\n    const [loader, setLoader] = useState(false);\n    const onSubmit = (evt) => {\n        evt.preventDefault();\n        setLoader(true);\n        fetch(apiRoute.login, {\n            body: JSON.stringify(state),\n            method: \"POST\",\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            }\n        })\n            .then(rs => rs.json())\n            .then(rs => {\n                if (!rs.data && rs.message) {\n                    alert(rs.message);\n                    return;\n                }\n                console.log(rs)\n                setLoader(false);\n            });\n    };\n    const onChange = (evt) => {\n        setState({\n            ...state,\n            [evt.target.name]: evt.target.value,\n        })\n    }\n    return (\n        <>\n            <Logo/>\n            <FormCard onSubmit={onSubmit}>\n                <Input\n                    onChange={onChange}\n                    name={\"username\"}\n                    placeholder={\"Email\"}\n                    value={state.username}\n                    type={\"email\"}\n                />\n                <Input\n                    onChange={onChange}\n                    name={\"password\"}\n                    placeholder={\"Password\"}\n                    value={state.password}\n                    type={\"password\"}\n                />\n                <Button type=\"submit\">\n                    {loader ? <Loader size={20}/>: \"Login\"}\n                </Button>\n            </FormCard>\n            <Buttons login/>\n        </>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}
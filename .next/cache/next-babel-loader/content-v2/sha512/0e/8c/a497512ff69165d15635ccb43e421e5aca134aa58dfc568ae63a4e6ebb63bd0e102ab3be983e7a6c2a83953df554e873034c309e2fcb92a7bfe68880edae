{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/rafaelgonzalezmunoz/IdeaProjects/microservices/service-auth-front/src/containers/LoginContainer.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { FormCard } from \"../components/FormCard\";\nimport React, { useState } from \"react\";\nimport { Input } from \"../components/Input\";\nimport { Button } from \"../components/Button\";\nimport { Logo } from \"../components/Logo\";\nimport { Buttons } from \"../components/Buttons\";\nimport { apiRoute } from \"../config/apiRoute\";\nexport const LoginContainer = () => {\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    email: \"\",\n    password: \"\"\n  });\n\n  const onSubmit = evt => {\n    evt.preventDefault();\n    fetch(apiRoute.login, {\n      body: JSON.stringify(state),\n      method: \"POST\",\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    }).then(rs => rs.json()).then(rs => {\n      console.log(rs);\n    });\n  };\n\n  const onChange = evt => {\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      [evt.target.name]: evt.target.value\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormCard, {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        onChange: onChange,\n        name: \"email\",\n        placeholder: \"Email\",\n        value: state.email,\n        type: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        onChange: onChange,\n        name: \"password\",\n        placeholder: \"Password\",\n        value: state.password,\n        type: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Buttons, {\n      login: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};","map":{"version":3,"sources":["/Users/rafaelgonzalezmunoz/IdeaProjects/microservices/service-auth-front/src/containers/LoginContainer.tsx"],"names":["FormCard","React","useState","Input","Button","Logo","Buttons","apiRoute","LoginContainer","state","setState","email","password","onSubmit","evt","preventDefault","fetch","login","body","JSON","stringify","method","headers","then","rs","json","console","log","onChange","target","name","value"],"mappings":";;;;;;;;;;AAAA,SAASA,QAAT,QAAyB,wBAAzB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,KAAT,QAAsB,qBAAtB;AACA,SAASC,MAAT,QAAuB,sBAAvB;AACA,SAASC,IAAT,QAAqB,oBAArB;AACA,SAASC,OAAT,QAAwB,uBAAxB;AACA,SAASC,QAAT,QAAyB,oBAAzB;AAEA,OAAO,MAAMC,cAAc,GAAG,MAAM;AAChC,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBR,QAAQ,CAAC;AAC/BS,IAAAA,KAAK,EAAE,EADwB;AAE/BC,IAAAA,QAAQ,EAAE;AAFqB,GAAD,CAAlC;;AAIA,QAAMC,QAAQ,GAAIC,GAAD,IAAS;AACtBA,IAAAA,GAAG,CAACC,cAAJ;AACAC,IAAAA,KAAK,CAACT,QAAQ,CAACU,KAAV,EAAiB;AAClBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeX,KAAf,CADY;AAElBY,MAAAA,MAAM,EAAE,MAFU;AAGlBC,MAAAA,OAAO,EAAE;AACL,kBAAU,kBADL;AAEL,wBAAgB;AAFX;AAHS,KAAjB,CAAL,CAQKC,IARL,CAQUC,EAAE,IAAIA,EAAE,CAACC,IAAH,EARhB,EASKF,IATL,CASUC,EAAE,IAAI;AACRE,MAAAA,OAAO,CAACC,GAAR,CAAYH,EAAZ;AACH,KAXL;AAYH,GAdD;;AAeA,QAAMI,QAAQ,GAAId,GAAD,IAAS;AACtBJ,IAAAA,QAAQ,iCACDD,KADC;AAEJ,OAACK,GAAG,CAACe,MAAJ,CAAWC,IAAZ,GAAmBhB,GAAG,CAACe,MAAJ,CAAWE;AAF1B,OAAR;AAIH,GALD;;AAMA,sBACI;AAAA,4BACI,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,QAAD;AAAU,MAAA,QAAQ,EAAElB,QAApB;AAAA,8BACI,QAAC,KAAD;AACI,QAAA,QAAQ,EAAEe,QADd;AAEI,QAAA,IAAI,EAAE,OAFV;AAGI,QAAA,WAAW,EAAE,OAHjB;AAII,QAAA,KAAK,EAAEnB,KAAK,CAACE,KAJjB;AAKI,QAAA,IAAI,EAAE;AALV;AAAA;AAAA;AAAA;AAAA,cADJ,eAQI,QAAC,KAAD;AACI,QAAA,QAAQ,EAAEiB,QADd;AAEI,QAAA,IAAI,EAAE,UAFV;AAGI,QAAA,WAAW,EAAE,UAHjB;AAII,QAAA,KAAK,EAAEnB,KAAK,CAACG,QAJjB;AAKI,QAAA,IAAI,EAAE;AALV;AAAA;AAAA;AAAA;AAAA,cARJ,eAeI,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAfJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAmBI,QAAC,OAAD;AAAS,MAAA,KAAK;AAAd;AAAA;AAAA;AAAA;AAAA,YAnBJ;AAAA,kBADJ;AAuBH,CAjDM","sourcesContent":["import { FormCard } from \"../components/FormCard\";\nimport React, { useState } from \"react\";\nimport { Input } from \"../components/Input\";\nimport { Button } from \"../components/Button\";\nimport { Logo } from \"../components/Logo\";\nimport { Buttons } from \"../components/Buttons\";\nimport { apiRoute } from \"../config/apiRoute\";\n\nexport const LoginContainer = () => {\n    const [state, setState] = useState({\n        email: \"\",\n        password: \"\"\n    });\n    const onSubmit = (evt) => {\n        evt.preventDefault();\n        fetch(apiRoute.login, {\n            body: JSON.stringify(state),\n            method: \"POST\",\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            }\n        })\n            .then(rs => rs.json())\n            .then(rs => {\n                console.log(rs)\n            });\n    };\n    const onChange = (evt) => {\n        setState({\n            ...state,\n            [evt.target.name]: evt.target.value,\n        })\n    }\n    return (\n        <>\n            <Logo/>\n            <FormCard onSubmit={onSubmit}>\n                <Input\n                    onChange={onChange}\n                    name={\"email\"}\n                    placeholder={\"Email\"}\n                    value={state.email}\n                    type={\"email\"}\n                />\n                <Input\n                    onChange={onChange}\n                    name={\"password\"}\n                    placeholder={\"Password\"}\n                    value={state.password}\n                    type={\"password\"}\n                />\n                <Button type=\"submit\">Login</Button>\n            </FormCard>\n            <Buttons login/>\n        </>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}
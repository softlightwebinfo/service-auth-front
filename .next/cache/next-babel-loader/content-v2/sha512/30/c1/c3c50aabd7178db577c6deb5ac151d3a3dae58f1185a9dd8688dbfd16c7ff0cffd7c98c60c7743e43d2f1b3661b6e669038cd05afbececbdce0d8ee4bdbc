{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _defineProperty from \"/Users/rafaelgonzalezmunoz/IdeaProjects/microservices/service-auth-front/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"/Users/rafaelgonzalezmunoz/IdeaProjects/microservices/service-auth-front/src/containers/RegisterContainer.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { FormCard } from \"../components/FormCard\";\nimport React, { useState } from \"react\";\nimport { Input } from \"../components/Input\";\nimport { Button } from \"../components/Button\";\nimport { Logo } from \"../components/Logo\";\nimport { Buttons } from \"../components/Buttons\";\nimport { apiRoute } from \"../config/apiRoute\";\nexport var RegisterContainer = function RegisterContainer() {\n  _s();\n\n  var _useState = useState({\n    email: \"\",\n    password: \"\",\n    name: \"\"\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  var onSubmit = function onSubmit(evt) {\n    evt.preventDefault();\n    fetch(apiRoute.get(\"register\"), {\n      method: \"POST\",\n      body: JSON.stringify(state),\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    }).then(function (rs) {\n      return rs.json();\n    }).then(function (rs) {\n      console.log(rs);\n    });\n  };\n\n  var onChange = function onChange(evt) {\n    setState(_objectSpread(_objectSpread({}, state), {}, _defineProperty({}, evt.target.name, evt.target.value)));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(FormCard, {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        onChange: onChange,\n        name: \"name\",\n        placeholder: \"Name\",\n        value: state.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Input, {\n        onChange: onChange,\n        name: \"email\",\n        placeholder: \"Email\",\n        value: state.email,\n        type: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Input, {\n        onChange: onChange,\n        name: \"password\",\n        placeholder: \"Password\",\n        value: state.password,\n        type: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(Buttons, {\n      register: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(RegisterContainer, \"YIRqXqJTf2SSONgvxPG5TSJ+5No=\");\n\n_c = RegisterContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterContainer\");","map":{"version":3,"sources":["/Users/rafaelgonzalezmunoz/IdeaProjects/microservices/service-auth-front/src/containers/RegisterContainer.tsx"],"names":["FormCard","React","useState","Input","Button","Logo","Buttons","apiRoute","RegisterContainer","email","password","name","state","setState","onSubmit","evt","preventDefault","fetch","get","method","body","JSON","stringify","headers","then","rs","json","console","log","onChange","target","value"],"mappings":";;;;;;;;;;;;AAAA,SAASA,QAAT,QAAyB,wBAAzB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,KAAT,QAAsB,qBAAtB;AACA,SAASC,MAAT,QAAuB,sBAAvB;AACA,SAASC,IAAT,QAAqB,oBAArB;AACA,SAASC,OAAT,QAAwB,uBAAxB;AACA,SAASC,QAAT,QAAyB,oBAAzB;AAEA,OAAO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AAAA;;AAAA,kBACTN,QAAQ,CAAC;AAC/BO,IAAAA,KAAK,EAAE,EADwB;AAE/BC,IAAAA,QAAQ,EAAE,EAFqB;AAG/BC,IAAAA,IAAI,EAAE;AAHyB,GAAD,CADC;AAAA,MAC5BC,KAD4B;AAAA,MACrBC,QADqB;;AAMnC,MAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,GAAD,EAAS;AACtBA,IAAAA,GAAG,CAACC,cAAJ;AACAC,IAAAA,KAAK,CAACV,QAAQ,CAACW,GAAT,CAAa,UAAb,CAAD,EAA2B;AAC5BC,MAAAA,MAAM,EAAE,MADoB;AAE5BC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeV,KAAf,CAFsB;AAG5BW,MAAAA,OAAO,EAAE;AACL,kBAAU,kBADL;AAEL,wBAAgB;AAFX;AAHmB,KAA3B,CAAL,CAOGC,IAPH,CAOQ,UAAAC,EAAE;AAAA,aAAIA,EAAE,CAACC,IAAH,EAAJ;AAAA,KAPV,EAOyBF,IAPzB,CAO8B,UAAAC,EAAE,EAAI;AAChCE,MAAAA,OAAO,CAACC,GAAR,CAAYH,EAAZ;AACH,KATD;AAUH,GAZD;;AAaA,MAAMI,QAAQ,GAAG,SAAXA,QAAW,CAACd,GAAD,EAAS;AACtBF,IAAAA,QAAQ,iCACDD,KADC,2BAEHG,GAAG,CAACe,MAAJ,CAAWnB,IAFR,EAEeI,GAAG,CAACe,MAAJ,CAAWC,KAF1B,GAAR;AAIH,GALD;;AAMA,sBACI;AAAA,4BACI,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,aADJ,eAEI,QAAC,QAAD;AAAU,MAAA,QAAQ,EAAEjB,QAApB;AAAA,8BACI,QAAC,KAAD;AACI,QAAA,QAAQ,EAAEe,QADd;AAEI,QAAA,IAAI,EAAE,MAFV;AAGI,QAAA,WAAW,EAAE,MAHjB;AAII,QAAA,KAAK,EAAEjB,KAAK,CAACD;AAJjB;AAAA;AAAA;AAAA;AAAA,eADJ,eAOI,QAAC,KAAD;AACI,QAAA,QAAQ,EAAEkB,QADd;AAEI,QAAA,IAAI,EAAE,OAFV;AAGI,QAAA,WAAW,EAAE,OAHjB;AAII,QAAA,KAAK,EAAEjB,KAAK,CAACH,KAJjB;AAKI,QAAA,IAAI,EAAE;AALV;AAAA;AAAA;AAAA;AAAA,eAPJ,eAcI,QAAC,KAAD;AACI,QAAA,QAAQ,EAAEoB,QADd;AAEI,QAAA,IAAI,EAAE,UAFV;AAGI,QAAA,WAAW,EAAE,UAHjB;AAII,QAAA,KAAK,EAAEjB,KAAK,CAACF,QAJjB;AAKI,QAAA,IAAI,EAAE;AALV;AAAA;AAAA;AAAA;AAAA,eAdJ,eAqBI,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eArBJ;AAAA;AAAA;AAAA;AAAA;AAAA,aAFJ,eAyBI,QAAC,OAAD;AAAS,MAAA,QAAQ;AAAjB;AAAA;AAAA;AAAA;AAAA,aAzBJ;AAAA,kBADJ;AA6BH,CAtDM;;GAAMF,iB;;KAAAA,iB","sourcesContent":["import { FormCard } from \"../components/FormCard\";\nimport React, { useState } from \"react\";\nimport { Input } from \"../components/Input\";\nimport { Button } from \"../components/Button\";\nimport { Logo } from \"../components/Logo\";\nimport { Buttons } from \"../components/Buttons\";\nimport { apiRoute } from \"../config/apiRoute\";\n\nexport const RegisterContainer = () => {\n    const [state, setState] = useState({\n        email: \"\",\n        password: \"\",\n        name: \"\",\n    });\n    const onSubmit = (evt) => {\n        evt.preventDefault();\n        fetch(apiRoute.get(\"register\"), {\n            method: \"POST\",\n            body: JSON.stringify(state),\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            }\n        }).then(rs => rs.json()).then(rs => {\n            console.log(rs);\n        });\n    };\n    const onChange = (evt) => {\n        setState({\n            ...state,\n            [evt.target.name]: evt.target.value,\n        })\n    }\n    return (\n        <>\n            <Logo/>\n            <FormCard onSubmit={onSubmit}>\n                <Input\n                    onChange={onChange}\n                    name={\"name\"}\n                    placeholder={\"Name\"}\n                    value={state.name}\n                />\n                <Input\n                    onChange={onChange}\n                    name={\"email\"}\n                    placeholder={\"Email\"}\n                    value={state.email}\n                    type={\"email\"}\n                />\n                <Input\n                    onChange={onChange}\n                    name={\"password\"}\n                    placeholder={\"Password\"}\n                    value={state.password}\n                    type={\"password\"}\n                />\n                <Button type=\"submit\">Register</Button>\n            </FormCard>\n            <Buttons register/>\n        </>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}
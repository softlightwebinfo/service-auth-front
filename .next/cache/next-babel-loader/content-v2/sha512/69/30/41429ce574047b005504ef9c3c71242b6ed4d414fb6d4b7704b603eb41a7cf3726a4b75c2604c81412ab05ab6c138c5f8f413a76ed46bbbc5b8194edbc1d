{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _defineProperty from \"/Users/rafaelgonzalezmunoz/IdeaProjects/microservices/service-auth-front/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"/Users/rafaelgonzalezmunoz/IdeaProjects/microservices/service-auth-front/src/containers/LoginContainer.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { FormCard } from \"../components/FormCard\";\nimport React, { useState } from \"react\";\nimport { Input } from \"../components/Input\";\nimport { Button } from \"../components/Button\";\nimport { Logo } from \"../components/Logo\";\nimport { Buttons } from \"../components/Buttons\";\nimport { apiRoute } from \"../config/apiRoute\";\nimport Router from 'next/router';\nimport { setCookie } from \"../lib/cookies\";\nexport var LoginContainer = function LoginContainer() {\n  _s();\n\n  var _useState = useState({\n    username: \"\",\n    password: \"\"\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  var _useState2 = useState(false),\n      loader = _useState2[0],\n      setLoader = _useState2[1];\n\n  var onSubmit = function onSubmit(evt) {\n    evt.preventDefault();\n    setLoader(true);\n    var page = \"https://www.codeunic.com/dashboard\";\n    var otherPage = false;\n    fetch(apiRoute.get(\"login\"), {\n      body: JSON.stringify(state),\n      method: \"POST\",\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    }).then(function (rs) {\n      return rs.json();\n    }).then(function (_ref) {\n      var data = _ref.data,\n          message = _ref.message;\n      setLoader(false);\n\n      if (!data && message) {\n        alert(message);\n        return;\n      }\n\n      setState({\n        username: \"\",\n        password: \"\"\n      });\n\n      if (!otherPage) {\n        setCookie(\"token\", data.token, 1);\n        setCookie(\"user\", JSON.stringify(data.user), 1);\n        Router.push(\"/dashboard\");\n      } else {\n        window.location.href = \"\".concat(page, \"?token=\").concat(data.token, \"?token_type=\").concat(data.token_type);\n      }\n    });\n  };\n\n  var onChange = function onChange(evt) {\n    setState(_objectSpread(_objectSpread({}, state), {}, _defineProperty({}, evt.target.name, evt.target.value)));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(FormCard, {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        onChange: onChange,\n        name: \"username\",\n        placeholder: \"Email\",\n        value: state.username,\n        type: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Input, {\n        onChange: onChange,\n        name: \"password\",\n        placeholder: \"Password\",\n        value: state.password,\n        type: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        loader: loader,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(Buttons, {\n      login: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(LoginContainer, \"qEObayRdoAk33UMEo3laK82WtAY=\");\n\n_c = LoginContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginContainer\");","map":{"version":3,"sources":["/Users/rafaelgonzalezmunoz/IdeaProjects/microservices/service-auth-front/src/containers/LoginContainer.tsx"],"names":["FormCard","React","useState","Input","Button","Logo","Buttons","apiRoute","Router","setCookie","LoginContainer","username","password","state","setState","loader","setLoader","onSubmit","evt","preventDefault","page","otherPage","fetch","get","body","JSON","stringify","method","headers","then","rs","json","data","message","alert","token","user","push","window","location","href","token_type","onChange","target","name","value"],"mappings":"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","sourcesContent":["import { FormCard } from \"../components/FormCard\";\nimport React, { useState } from \"react\";\nimport { Input } from \"../components/Input\";\nimport { Button } from \"../components/Button\";\nimport { Logo } from \"../components/Logo\";\nimport { Buttons } from \"../components/Buttons\";\nimport { apiRoute } from \"../config/apiRoute\";\nimport Router from 'next/router'\nimport { setCookie } from \"../lib/cookies\";\n\nexport const LoginContainer = () => {\n    const [state, setState] = useState({\n        username: \"\",\n        password: \"\"\n    });\n    const [loader, setLoader] = useState(false);\n    const onSubmit = (evt) => {\n        evt.preventDefault();\n        setLoader(true);\n        const page = \"https://www.codeunic.com/dashboard\"\n        const otherPage = false;\n        fetch(apiRoute.get(\"login\"), {\n            body: JSON.stringify(state),\n            method: \"POST\",\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            }\n        })\n            .then(rs => rs.json())\n            .then(({data, message}) => {\n                setLoader(false);\n                if (!data && message) {\n                    alert(message);\n                    return;\n                }\n                setState({username: \"\", password: \"\"});\n                if (!otherPage) {\n                    setCookie(\"token\", data.token, 1);\n                    setCookie(\"user\", JSON.stringify(data.user), 1);\n                    Router.push(\"/dashboard\");\n                } else {\n                    window.location.href = `${page}?token=${data.token}?token_type=${data.token_type}`;\n                }\n            });\n    };\n    const onChange = (evt) => {\n        setState({\n            ...state,\n            [evt.target.name]: evt.target.value,\n        })\n    }\n    return (\n        <>\n            <Logo/>\n            <FormCard onSubmit={onSubmit}>\n                <Input\n                    onChange={onChange}\n                    name={\"username\"}\n                    placeholder={\"Email\"}\n                    value={state.username}\n                    type={\"email\"}\n                />\n                <Input\n                    onChange={onChange}\n                    name={\"password\"}\n                    placeholder={\"Password\"}\n                    value={state.password}\n                    type={\"password\"}\n                />\n                <Button type=\"submit\" loader={loader}>\n                    Login\n                </Button>\n            </FormCard>\n            <Buttons login/>\n        </>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}